#! /usr/bin/env bash

[ "${TRACE}" = "YES" ] && set -x && : "$0" "$@"


expect_match_filepath()
{
   log_entry "expect_match_print_filepath" "$@"

   local expected="$1"; shift
   local ignore_dir="$1"
   local ignore_filter="$2"
   local match_dir="$3"
   local match_filter="$4"
   local filepath="$5"

   local result

   if ! result="`match_filepath "$@"`"
   then
      fail "Pattern \"${pattern}\" did not match filepath \"${filepath}\""
   fi

   if [ "${result}" != "${expected}" ]
   then
      fail "Result \"${result}\" was expected to be \"${expected}\""
   fi
}


expect_match_print_filepath()
{
   log_entry "expect_match_print_filepath" "$@"

   local expected="$1"; shift
   local format="$1"
   local ignore_dir="$2"
   local ignore_filter="$3"
   local match_dir="$4"
   local match_filter="$5"
   local filepath="$6"

   local result

   if ! result="`match_print_filepath "$@"`"
   then
      fail "Pattern \"${pattern}\" did not match filepath \"${filepath}\""
   fi

   if [ "${result}" != "${expected}" ]
   then
      fail "Result \"${result}\" was expected to be \"${expected}\""
   fi
}


main()
{
   MULLE_MONITOR_FLAGS="$@"

   _options_mini_main "$@"

   #
   # memo: remember we only deal with relative paths w/o leading /!
   # for simplicity it's also assumed that no relative path contain a
   # trailing '/'
   #
   expect_match_filepath "1-a--"  "" "" "match" "" "a"
   expect_match_filepath "2-b--x"  "" "" "match" "" "b"
   expect_match_filepath "4-aa--" "" "" "match" "" "aa"
   expect_match_filepath "4-aa--" "" "" "match" "" "aaa"

   log_verbose "----- #1 PASSED -----"

   expect_match_print_filepath "a;1-a--;a"     "%t;%m;%f\\n"    "" "" "match" "" "a"
   expect_match_print_filepath "b;x;2-b--x;b"  "%t;%c;%m;%f\\n" "" "" "match" "" "b"
   expect_match_print_filepath "aa;4-aa--;aa"  "%t;%m;%f\\n"    "" "" "match" "" "aa"
   expect_match_print_filepath "aa;4-aa--;aaa" "%t;%m;%f\\n"    "" "" "match" "" "aaa"

   log_verbose "----- #2 PASSED -----"

   log_info "----- ALL PASSED -----"
}


init()
{
   MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions-env libexec-dir`" || exit 1

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1

   MULLE_MONITOR="${MULLE_MONITOR:-${PWD}/../../mulle-monitor}"

   MULLE_MONITOR_LIBEXEC_DIR="`"${MULLE_MONITOR}" "libexec-dir"`" || exit 1

   . "${MULLE_MONITOR_LIBEXEC_DIR}/mulle-monitor-match.sh" || exit 1
}


init "$@"
main "$@"

