#! /usr/bin/env bash

[ "${TRACE}" = "YES" ] && set -x && : "$0" "$@"


run_mulle_match()
{
   echo "####################################" >&2
   echo mulle-match ${MULLE_MATCH_FLAGS} "$@"  >&2
   echo "####################################" >&2

   "${MULLE_MATCH}" ${MULLE_MATCH_FLAGS} "$@" || fail "\`mulle-match $*\` failed"
}


expect_mulle_match()
{
   log_entry "expect_mulle_match" "$@"

   local expected="$1"; shift

   local result

   result="`run_mulle_match "$@"`" || exit 1

   if [ "${result}" != "${expected}" ]
   then
      fail "Result \"${result}\" was expected to be \"${expected}\""
   fi
}


expect_failure_mulle_match()
{
   log_entry "expect_failure_mulle_match" "$@"

   local result

   if result="`run_mulle_match "$@"`"
   then
      fail "Did not fail unexpectedly"
   fi
}


main()
{
   MULLE_MATCH_FLAGS="$@"

   _options_mini_main "$@"

   #-----------

   expect_mulle_match "a;red
z/a;red" -e -md "match.d" find -mf type0negative

   log_verbose "----- #1 PASSED -----"
   expect_mulle_match "a;red
b;blue
z/a;red
z/b;blue" -e -md "match.d" find
   log_verbose "----- #2 PASSED -----"

   log_info "----- ALL PASSED -----"
}



init()
{
   MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions-env libexec-dir`" || exit 1

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1

   MULLE_MATCH="${MULLE_MATCH:-${PWD}/../../mulle-match}"
}


init "$@"
main "$@"

