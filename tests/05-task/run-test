#! /usr/bin/env bash

[ "${TRACE}" = "YES" ] && set -x && : "$0" "$@"


run_mulle_monitor()
{
   echo "####################################" >&2
   echo mulle-monitor ${MULLE_MONITOR_FLAGS} "$@"  >&2
   echo "####################################" >&2

   "${MULLE_MONITOR}" ${MULLE_MONITOR_FLAGS} "$@" || fail "\`mulle-monitor $*\` failed"
}


expect_mulle_monitor()
{
   log_entry "expect_mulle_monitor" "$@"

   local expected="$1"; shift

   local result

   result="`run_mulle_monitor "$@"`" || exit 1

   if [ "${result}" != "${expected}" ]
   then
      fail "Result \"${result}\" was expected to be \"${expected}\""
   fi
}


expect_failure_mulle_monitor()
{
   log_entry "expect_failure_mulle_monitor" "$@"

   local result

   if result="`run_mulle_monitor "$@"`"
   then
      fail "Did not fail unexpectedly"
   fi
}


main()
{
   MULLE_MONITOR_FLAGS="$@"

   _options_mini_main "$@"

   #-----------

   expect_mulle_monitor ".mulle-monitor/libexec/foo-task.sh" -e task locate foo

   log_verbose "----- #1 PASSED -----"

   #-----------

   expect_mulle_monitor ".mulle-monitor/libexec/bar-task.sh" -e task locate bar

   log_verbose "----- #2 PASSED -----"

   #-----------

   expect_failure_mulle_monitor -e task locate baz

   log_verbose "----- #3 PASSED -----"

   #-----------

   expect_mulle_monitor "" -e task require foo

   log_verbose "----- #4 PASSED -----"

   #-----------

   expect_failure_mulle_monitor -e task require bar

   log_verbose "----- #5 PASSED -----"

   #-----------



   log_info "----- ALL PASSED -----"
}



init()
{
   MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions-env libexec-dir`" || exit 1

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1

   MULLE_MONITOR="${MULLE_MONITOR:-${PWD}/../../mulle-monitor}"
}


init "$@"
main "$@"

