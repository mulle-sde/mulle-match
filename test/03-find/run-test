#! /usr/bin/env bash

[ "${TRACE}" = 'YES' ] && set -x && : "$0" "$@"


expect_find_filenames()
{
   log_entry "expect_find_filenames" "$@"

   local expected="$1"; shift

   local result

   result="`list_filenames "$@" | LC_ALL=C sort`"

   if [ "${result}" != "${expected}" ]
   then
      fail "Result \"${result}\" was expected to be \"${expected}\""
   fi
}


main()
{
   MULLE_MATCH_FLAGS="$@"

   _options_mini_main "$@"

   #
   # memo: remember we only deal with relative paths w/o leading /!
   # for simplicity it's also assumed that no relative path contain a
   # trailing '/'
   #
   shopt -s extglob

   local expected
   local ignore
   local match
   local _cache

   _define_patternfilefunctions "ignore.d"
   ignore="${_cache}"

   _define_patternfilefunctions "match.d"
   match="${_cache}"

   #-----------
   expected="src/foo.c
src/main.c"

   MULLE_MATCH_PATH="src:foo"
   export MULLE_MATCH_PATH

   expect_find_filenames "${expected}" "%f\\n" "source" "" "${ignore}" "${match}"
   log_verbose "----- #1 PASSED -----"

   #-----------
   expected="src/foo.h"
   expect_find_filenames "${expected}" "%f\\n" "header" "" "${ignore}" "${match}"

   log_verbose "----- #2 PASSED -----"

   #-----------
   expected="foo/wrong.h
src/foo.h"
   expect_find_filenames "${expected}" "%f\\n" "header" "" "" "${match}"

   log_verbose "----- #3 PASSED -----"

   #-----------

   log_info "----- ALL PASSED -----"
}



init()
{
   MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions-env libexec-dir`" || exit 1

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1

   MULLE_MATCH="${MULLE_MATCH:-${PWD}/../../mulle-match}"

   MULLE_MATCH_LIBEXEC_DIR="`"${MULLE_MATCH}" "libexec-dir"`" || exit 1

   . "${MULLE_MATCH_LIBEXEC_DIR}/mulle-match-filename.sh" || exit 1
   . "${MULLE_MATCH_LIBEXEC_DIR}/mulle-match-list.sh" || exit 1
}


init "$@"
main "$@"

